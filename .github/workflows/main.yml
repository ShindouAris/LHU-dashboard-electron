name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'  # trigger on tags like v1.0.0

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install dependencies
      run: npm ci

    - name: Build Electron app
      run: npm run build

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: electron-build-${{ matrix.os }}
        path: ./dist/
        
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./release

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release
        asset_name: electron-build-${{ github.ref_name }}.zip
        asset_content_type: application/zip
name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'  # trigger on tags like v1.0.0

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install dependencies
      run: npm ci

    - name: Build Electron app
      run: npm run build

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: electron-build-${{ matrix.os }}
        path: ./dist/
        
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./release

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release
        asset_name: electron-build-${{ github.ref_name }}.zip
        asset_content_type: application/zip
